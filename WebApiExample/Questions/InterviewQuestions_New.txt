Вопросы для собеседования на Senior .NET Developer

1. Вопросы по языку C#

1.1. Managed и Unmanaged ресурсы в .NET
    Managed ресурсы:
    - Управляются сборщиком мусора (Garbage Collector)
    - Автоматически очищаются
    - Примеры: объекты классов, строки, массивы

   Unmanaged ресурсы:
   - Не управляются сборщиком мусора
   - Требуют явной очистки
   - Примеры: файлы, соединения с БД, сокеты

   IDisposable:
   - Интерфейс для освобождения unmanaged ресурсов
   - Реализует метод Dispose()
   - Используется с конструкцией using

   using:
   - Автоматически вызывает Dispose()
   - Гарантирует освобождение ресурсов даже при исключениях
   - Синтаксический сахар для try-finally

   SafeHandle:
   - Безопасная обертка для unmanaged ресурсов
   - Предотвращает утечки памяти
   - Автоматически освобождает ресурсы

   DisposeAsync:
   - Асинхронная версия Dispose()
   - Возвращает ValueTask
   - Полезен при асинхронной работе с ресурсами

   Практическая часть:
   - Реализация IDisposable в сервисе
   - Использование using
   - Асинхронное освобождение ресурсов

1.2. Garbage Collector и как он работает
    Фазы GC:
    - Mark (маркировка живых объектов)
    - Sweep (очистка неиспользуемых объектов)
    - Compact (дефрагментация памяти)
    - Лучшие практики

    Поколения:
    - Gen 0 (новые объекты)
    - Gen 1 (пережившие одну сборку)
    - Gen 2 (долгоживущие объекты)
    - Лучшие практики

    LOH (Large Object Heap):
    - Объекты > 85KB
    - Отдельная область памяти
    - Не дефрагментируется
    - Лучшие практики

    Конфигурация:
    - Server GC vs Workstation GC
    - Concurrent GC
    - Background GC
    - Лучшие практики

    Режимы работы:
    - Server/Workstation
    - Concurrent
    - Background
    - Лучшие практики

    Практическая часть:
    - Мониторинг GC
    - Оптимизация памяти
    - Анализ производительности

1.3. Как работает Equals в C#
    Сравнение reference types:
    - == (сравнение ссылок)
    - Equals() (сравнение значений)
    - ReferenceEquals (сравнение ссылок)
    - Лучшие практики

    Сравнение value types:
    - == (сравнение значений)
    - Equals() (сравнение значений)
    - Лучшие практики

    Переопределение Equals:
    - override
    - GetHashCode
    - Лучшие практики

    == оператор:
    - Перегрузка
    - Сравнение null
    - Лучшие практики

    GetHashCode:
    - Реализация
    - Коллизии
    - Лучшие практики

    IEquatable<T>:
    - Интерфейс
    - Реализация
    - Лучшие практики

    Records:
    - Автоматическая реализация Equals
    - Сравнение по значению
    - Иммутабельность
    - Позиционный синтаксис
    - with выражения
    - Лучшие практики

    Практическая часть:
    - Реализация Equals
    - Создание record
    - Сравнение объектов

1.4. Работа с делегатами и событиями в .NET
    Делегаты:
    - Определение
    - Синтаксис
    - Multicast
    - Лучшие практики

    События:
    - Определение
    - Синтаксис
    - Обработка
    - Лучшие практики

    Лямбды:
    - Синтаксис
    - Замыкания
    - Лучшие практики

    Практическая часть:
    - Создание делегатов
    - Обработка событий
    - Использование лямбд

1.5. Работа с атрибутами в .NET
    Определение:
    - Синтаксис
    - Параметры
    - Лучшие практики

    Встроенные атрибуты:
    - Obsolete
    - Serializable
    - Лучшие практики

    Создание атрибутов:
    - Наследование
    - Применение
    - Лучшие практики

    Рефлексия:
    - Получение атрибутов
    - Проверка наличия
    - Лучшие практики

    Практическая часть:
    - Создание атрибутов
    - Применение атрибутов
    - Работа с рефлексией

1.6. Работа с коллекциями в .NET
    List<T>:
    - Добавление
    - Удаление
    - Поиск
    - Лучшие практики

    Dictionary<TKey, TValue>:
    - Добавление
    - Удаление
    - Поиск
    - Лучшие практики

    HashSet<T>:
    - Добавление
    - Удаление
    - Поиск
    - Лучшие практики

    Queue<T>:
    - Добавление
    - Удаление
    - Просмотр
    - Лучшие практики

    Stack<T>:
    - Добавление
    - Удаление
    - Просмотр
    - Лучшие практики

    Практическая часть:
    - Работа с коллекциями
    - Оптимизация
    - Тестирование

1.7. Работа с потоками в .NET
    Thread:
    - Создание
    - Управление
    - Синхронизация
    - Лучшие практики

    ThreadPool:
    - Использование
    - Настройка
    - Лучшие практики

    Task:
    - Создание
    - Управление
    - Отмена
    - Лучшие практики

    async/await:
    - Синтаксис
    - Контекст
    - Лучшие практики

    Практическая часть:
    - Создание потоков
    - Асинхронные операции
    - Синхронизация

1.8. Pattern Matching и нововведения в C#
    Pattern Matching:
    - is с паттернами
    - switch с паттернами
    - var паттерн
    - constant паттерн
    - type паттерн
    - property паттерн
    - tuple паттерн
    - positional паттерн
    - list паттерн
    - Лучшие практики

    Нововведения C# 12:
    - Primary constructors
    - Collection expressions
    - Alias any type
    - Default lambda parameters
    - Лучшие практики

    Нововведения C# 11:
    - Raw string literals
    - Generic attributes
    - Required members
    - File-scoped types
    - List patterns
    - Лучшие практики

    Нововведения C# 10:
    - Record structs
    - Global using directives
    - File-scoped namespaces
    - Extended property patterns
    - Constant interpolated strings
    - Лучшие практики

    Нововведения C# 9:
    - Records
    - Init-only setters
    - Top-level statements
    - Pattern matching enhancements
    - Target-typed new expressions
    - Лучшие практики

    Практическая часть:
    - Использование pattern matching
    - Применение нововведений
    - Оптимизация кода
    - Рефакторинг

2. Вопросы по фреймворку .NET

2.1. Dependency Injection в .NET
// ... existing code ...

2.2. SOLID принципы
    Single Responsibility:
    - Определение
    - Примеры
    - Лучшие практики

    Open/Closed:
    - Определение
    - Примеры
    - Лучшие практики

    Liskov Substitution:
    - Определение
    - Примеры
    - Лучшие практики

    Interface Segregation:
    - Определение
    - Примеры
    - Лучшие практики

    Dependency Inversion:
    - Определение
    - Примеры
    - Лучшие практики

    Практическая часть:
    - Рефакторинг кода
    - Применение принципов
    - Анализ нарушений

2.3. Паттерны проектирования
    Creational:
    - Singleton
    - Factory Method
    - Abstract Factory
    - Builder
    - Prototype
    - Лучшие практики

    Structural:
    - Adapter
    - Bridge
    - Composite
    - Decorator
    - Facade
    - Flyweight
    - Proxy
    - Лучшие практики

    Behavioral:
    - Chain of Responsibility
    - Command
    - Iterator
    - Mediator
    - Memento
    - Observer
    - State
    - Strategy
    - Template Method
    - Visitor
    - Лучшие практики

    Практическая часть:
    - Реализация паттернов
    - Применение в проекте
    - Анализ использования

2.4. LINQ и его отличие от SQL
    Операторы:
    - Where
    - Select
    - OrderBy
    - GroupBy
    - Join
    - Лучшие практики

    Отложенное выполнение:
    - Определение
    - Примеры
    - Лучшие практики

    Материализация:
    - ToList
    - ToArray
    - ToDictionary
    - Лучшие практики

    Отличия от SQL:
    - Синтаксис
    - Выполнение
    - Оптимизация
    - Лучшие практики

    Практическая часть:
    - Создание запросов
    - Оптимизация
    - Тестирование

2.5. Асинхронное программирование в C#
    async/await:
    - Синтаксис
    - Контекст
    - Лучшие практики

    Task:
    - Создание
    - Управление
    - Отмена
    - Лучшие практики

    ConfigureAwait:
    - Использование
    - Контекст
    - Лучшие практики

    Практическая часть:
    - Асинхронные операции
    - Обработка ошибок
    - Оптимизация

2.6. Unit тесты в .NET
    xUnit:
    - Тесты
    - Фикстуры
    - Теории
    - Лучшие практики

    Moq:
    - Моки
    - Стабы
    - Проверки
    - Лучшие практики

    FluentAssertions:
    - Утверждения
    - Проверки
    - Лучшие практики

    Практическая часть:
    - Написание тестов
    - Мокирование
    - Проверка результатов

2.7. Логирование в .NET
    ILogger:
    - Уровни
    - Категории
    - Лучшие практики

    Serilog:
    - Конфигурация
    - Синки
    - Лучшие практики

    NLog:
    - Конфигурация
    - Таргеты
    - Лучшие практики

    Практическая часть:
    - Настройка логирования
    - Использование
    - Анализ логов

2.8. Middleware в ASP.NET Core
    Определение:
    - Синтаксис
    - Порядок
    - Лучшие практики

    Встроенные middleware:
    - Authentication
    - Authorization
    - CORS
    - Лучшие практики

    Создание middleware:
    - Класс
    - Метод
    - Лучшие практики

    Практическая часть:
    - Создание middleware
    - Использование
    - Тестирование

2.9. Работа с JSON в .NET
    System.Text.Json:
    - Сериализация
    - Десериализация
    - Конвертеры
    - Лучшие практики

    Newtonsoft.Json:
    - Сериализация
    - Десериализация
    - Конвертеры
    - Лучшие практики

    Практическая часть:
    - Работа с JSON
    - Оптимизация
    - Тестирование

2.10. Работа с XML в .NET
    System.Xml:
    - Чтение
    - Запись
    - Валидация
    - Лучшие практики

    XDocument:
    - Создание
    - Модификация
    - Лучшие практики

    Практическая часть:
    - Работа с XML
    - Оптимизация
    - Тестирование

2.11. Работа с сетью в .NET
    HttpClient:
    - Создание
    - Запросы
    - Ответы
    - Лучшие практики

    WebClient:
    - Создание
    - Запросы
    - Ответы
    - Лучшие практики

    HttpWebRequest:
    - Создание
    - Запросы
    - Ответы
    - Лучшие практики

    Практическая часть:
    - HTTP запросы
    - Обработка ответов
    - Обработка ошибок

2.12. Работа с файлами в .NET
    File:
    - Чтение
    - Запись
    - Удаление
    - Лучшие практики

    FileInfo:
    - Свойства
    - Методы
    - Лучшие практики

    Directory:
    - Создание
    - Удаление
    - Перечисление
    - Лучшие практики

    DirectoryInfo:
    - Свойства
    - Методы
    - Лучшие практики

    Практическая часть:
    - Работа с файлами
    - Работа с директориями
    - Обработка ошибок

2.13. Работа с логами в .NET
    ILogger:
    - Уровни
    - Категории
    - Лучшие практики

    Serilog:
    - Конфигурация
    - Синки
    - Лучшие практики

    NLog:
    - Конфигурация
    - Таргеты
    - Лучшие практики

    Практическая часть:
    - Настройка логирования
    - Использование
    - Анализ логов

2.14. Работа с фоновыми задачами в .NET
    IHostedService:
    - Реализация
    - Запуск
    - Остановка
    - Лучшие практики

    BackgroundService:
    - Реализация
    - Запуск
    - Остановка
    - Лучшие практики

    Hangfire:
    - Конфигурация
    - Задачи
    - Мониторинг
    - Лучшие практики

    Практическая часть:
    - Создание фоновых задач
    - Мониторинг
    - Обработка ошибок

2.15. Работа с метриками в .NET
    Prometheus:
    - Метрики
    - Экспорт
    - Лучшие практики

    Grafana:
    - Дашборды
    - Алерты
    - Лучшие практики

    Практическая часть:
    - Сбор метрик
    - Визуализация
    - Анализ

3. Вопросы по внешним технологиям

3.1. Контейнеризация в .NET
    Docker:
    - Образы
    - Контейнеры
    - Композиция
    - Лучшие практики

    Docker Compose:
    - Сервисы
    - Сети
    - Тома
    - Лучшие практики

    Практическая часть:
    - Создание образов
    - Запуск контейнеров
    - Мониторинг

3.2. GitLab CI
    Pipeline:
    - Этапы
    - Джобы
    - Артефакты
    - Лучшие практики

    Variables:
    - Глобальные
    - Локальные
    - Секреты
    - Лучшие практики

    Практическая часть:
    - Создание pipeline
    - Настройка этапов
    - Мониторинг

3.3. REST API
    Endpoints:
    - GET
    - POST
    - PUT
    - DELETE
    - Лучшие практики

    Response:
    - Status codes
    - Headers
    - Body
    - Лучшие практики

    Практическая часть:
    - Создание endpoints
    - Обработка запросов
    - Валидация

3.4. Обработка ошибок в .NET
    Exceptions:
    - Try-catch-finally
    - Custom exceptions
    - Middleware
    - Лучшие практики

    Logging:
    - Levels
    - Providers
    - Filters
    - Лучшие практики

    Практическая часть:
    - Создание custom exceptions
    - Настройка middleware
    - Логирование ошибок

3.5. Kubernetes в .NET
    Pods:
    - Конфигурация
    - Жизненный цикл
    - Ресурсы
    - Лучшие практики

    Services:
    - Типы
    - Endpoints
    - Load balancing
    - Лучшие практики

    Практическая часть:
    - Создание pods
    - Настройка services
    - Мониторинг

3.6. OpenID Connect в .NET
    Authentication:
    - Flows
    - Tokens
    - Claims
    - Лучшие практики

    Authorization:
    - Policies
    - Roles
    - Permissions
    - Лучшие практики

    Практическая часть:
    - Настройка OIDC
    - Реализация flows
    - Управление claims

3.7. LDAP в .NET
    Authentication:
    - Bind
    - Search
    - Groups
    - Лучшие практики

    Operations:
    - CRUD
    - Filters
    - Attributes
    - Лучшие практики

    Практическая часть:
    - Подключение к LDAP
    - Аутентификация
    - Поиск пользователей

3.8. Kafka в .NET
    Producers:
    - Конфигурация
    - Отправка сообщений
    - Партиционирование
    - Лучшие практики

    Consumers:
    - Группы
    - Оффсеты
    - Реконнект
    - Лучшие практики

    Практическая часть:
    - Создание producers
    - Настройка consumers
    - Обработка сообщений

4. Вопросы по БД и SQL

4.1. SQL Server в .NET
    Connection:
    - Connection strings
    - Connection pooling
    - Timeouts
    - Лучшие практики

    Operations:
    - CRUD
    - Transactions
    - Stored procedures
    - Лучшие практики

    Практическая часть:
    - Подключение к БД
    - Выполнение запросов
    - Управление транзакциями

4.2. Entity Framework Core
// ... existing code ... 

4.3. Dapper в .NET
    Configuration:
    - Connection
    - Mappers
    - Parameters
    - Лучшие практики

    Operations:
    - Query
    - Execute
    - Bulk operations
    - Лучшие практики

    Практическая часть:
    - Настройка Dapper
    - Выполнение запросов
    - Маппинг результатов

// ... existing code ... 

4.4. SQL в .NET
    Queries:
    - SELECT
    - INSERT
    - UPDATE
    - DELETE
    - Лучшие практики

    Performance:
    - Indexes
    - Execution plans
    - Query optimization
    - Лучшие практики

    Практическая часть:
    - Написание запросов
    - Оптимизация
    - Анализ планов

4.5. Stored Procedures в .NET
    Creation:
    - Parameters
    - Variables
    - Control flow
    - Лучшие практики

    Execution:
    - Calling
    - Results
    - Error handling
    - Лучшие практики

    Практическая часть:
    - Создание процедур
    - Вызов из кода
    - Обработка результатов

4.6. Transactions в .NET
    Types:
    - Explicit
    - Implicit
    - Distributed
    - Лучшие практики

    Management:
    - Commit
    - Rollback
    - Savepoints
    - Лучшие практики

    Практическая часть:
    - Создание транзакций
    - Управление состоянием
    - Обработка ошибок

4.8. Views в .NET
    Types:
    - Simple
    - Complex
    - Indexed
    - Лучшие практики

    Management:
    - Creation
    - Modification
    - Security
    - Лучшие практики

    Практическая часть:
    - Создание представлений
    - Использование в запросах
    - Оптимизация

4.9. Functions в .NET
    Types:
    - Scalar
    - Table-valued
    - Aggregate
    - Лучшие практики

    Management:
    - Creation
    - Parameters
    - Return values
    - Лучшие практики

    Практическая часть:
    - Создание функций
    - Использование в запросах
    - Оптимизация

4.10. Triggers в .NET
    Types:
    - DML
    - DDL
    - Logon
    - Лучшие практики

    Management:
    - Creation
    - Events
    - Security
    - Лучшие практики

    Практическая часть:
    - Создание триггеров
    - Обработка событий
    - Отладка

4.11. Constraints в .NET
    Types:
    - Primary Key
    - Foreign Key
    - Check
    - Лучшие практики

    Management:
    - Creation
    - Modification
    - Validation
    - Лучшие практики

    Практическая часть:
    - Создание ограничений
    - Проверка целостности
    - Оптимизация

4.12. Backup и Restore в .NET
    Types:
    - Full
    - Differential
    - Transaction log
    - Лучшие практики

    Management:
    - Creation
    - Restoration
    - Verification
    - Лучшие практики

    Практическая часть:
    - Создание бэкапов
    - Восстановление
    - Проверка целостности

4.17. Monitoring в .NET
    Tools:
    - Profiler
    - Extended Events
    - Performance Monitor
    - Лучшие практики

    Metrics:
    - CPU
    - Memory
    - I/O
    - Лучшие практики

    Практическая часть:
    - Настройка мониторинга
    - Анализ метрик
    - Алерты

4.18. Troubleshooting в .NET
    Tools:
    - Profiler
    - Extended Events
    - DMVs
    - Лучшие практики

    Process:
    - Analysis
    - Resolution
    - Prevention
    - Лучшие практики

    Практическая часть:
    - Диагностика проблем
    - Решение проблем
    - Профилактика

4.19. Migration в .NET
    Types:
    - Schema
    - Data
    - Code
    - Лучшие практики

    Process:
    - Planning
    - Execution
    - Validation
    - Лучшие практики

    Практическая часть:
    - Планирование миграции
    - Выполнение миграции
    - Проверка результатов

4.20. Testing в .NET
    Types:
    - Unit
    - Integration
    - Performance
    - Лучшие практики

    Tools:
    - xUnit
    - NUnit
    - MSTest
    - Лучшие практики

    Практическая часть:
    - Написание тестов
    - Запуск тестов
    - Анализ результатов

4.21. Documentation в .NET
    Types:
    - Code
    - API
    - Database
    - Лучшие практики

    Tools:
    - XML
    - Swagger
    - Markdown
    - Лучшие практики

    Практическая часть:
    - Создание документации
    - Обновление документации
    - Проверка качества

4.22. Version Control в .NET
    Types:
    - Git
    - SVN
    - TFS
    - Лучшие практики

    Process:
    - Branching
    - Merging
    - Conflict resolution
    - Лучшие практики

    Практическая часть:
    - Управление ветками
    - Разрешение конфликтов
    - Code review